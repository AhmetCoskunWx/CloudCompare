name: cloudcompare 
base: core18
version: '2.11-beta' 
summary: 3D point cloud and mesh processing software
description: |
  CloudCompare is a 3D point cloud (and triangular mesh) processing software.
  Originally designed to perform comparison between two dense 3D points clouds
  or between a point cloud and a triangular mesh, it has been extended to a
  more generic point cloud processing software, including many advanced
  algorithms (registration, resampling, color/normal/scalar fields handling,
  statistics computation, sensor management, interactive or automatic
  segmentation, display enhancement, etc.).
type: app
icon: snap/gui/cloudcompare.png
license: GPL-2.0
grade: devel # TODO: change this to stable 
confinement: devmode #TODO: change this to strict
architectures:
  - build-on: amd64 # only amd64 for now
    run-on: amd64 # only amd64 for now

apps:
  ccViewer:
    command: desktop-launch ccViewer
    # $SNAP_ARCH_TRIPLET doesn't seems to be substitued in environement so it's hardcoded for now
    environment: 
      "LD_LIBRARY_PATH": "$SNAP/lib/cloudcompare:$SNAP/usr/lib/x86_64-linux-gnu/blas:$SNAP/usr/lib/x86_64-linux-gnu/lapack:$LD_LIBRARY_PATH"
    extensions: [kde-neon]
    plugs: [desktop, home, x11, wayland, unity7, opengl, removable-media]
  CloudCompare:
    command: desktop-launch CloudCompare
    environment: 
      "LD_LIBRARY_PATH": "$SNAP/lib/cloudcompare:$SNAP/usr/lib/x86_64-linux-gnu/blas:$SNAP/usr/lib/x86_64-linux-gnu/lapack:$LD_LIBRARY_PATH"
    extensions: [kde-neon]
    plugs: [desktop, home, x11, wayland, unity7, opengl, removable-media]

parts:
  cloudcompare:
    after: [eigen, pdal, e57]
    plugin: cmake
    source: https://github.com/CloudCompare/CloudCompare.git
    source-type: git
    source-depth: 10
    source-branch: master
    build-packages:
      - build-essential
      - libavcodec-dev
      - libavformat-dev
      - libavutil-dev
      - libboost-thread-dev
      - libboost-program-options-dev
      - libcgal-dev
      - libcgal-qt5-dev
      - libdlib-dev
      - libjsoncpp-dev
      - libswscale-dev
      - libtbb-dev
      - libqt5opengl5-dev
      - qttools5-dev 
      - libqt5svg5-dev 
      - qttools5-dev-tools
      - libgdal-dev
      - libxerces-c-dev
      - libpcl-dev
      - libproj-dev
    stage-packages:
      - libaec0
      - libarmadillo8
      - libarpack2
      - libdap25
      - libdapclient6v5
      - libepsilon1
      - libfreexl1
      - libfyba0
      - libgdal20
      - libgeos-3.6.2
      - libgeos-c1v5
      - libgeotiff2
      - libgfortran4
      - libgif7
      - libhdf4-0-alt
      - libhdf5-100
      - libkmlbase1
      - libkmldom1
      - libkmlengine1
      - libnetcdf13
      - libogdi3.2
      - libpoppler73
      - libproj12
      - libqhull7
      - libquadmath0
      - libspatialite7
      - libsuperlu5
      - libsz2
      - libtbb2
      - liburiparser1
      - libxerces-c3.2
      - odbcinst1debian2
    configflags:
      - -DCMAKE_BUILD_TYPE=Release
# CCLib
      - -DCOMPILE_CC_CORE_LIB_WITH_CGAL=ON
      - -DCOMPILE_CC_CORE_LIB_WITH_TBB=ON
# File Format
      - -DOPTION_USE_GDAL=ON
      - -DOPTION_USE_DXF_LIB=ON
      - -DOPTION_USE_SHAPE_LIB=ON
      - -DPLUGIN_IO_QPDAL=ON
      - -DJSON_ROOT_DIR=/usr/include/jsoncpp
      - -DPLUGIN_IO_QE57=ON
      - -DLIBE57FORMAT_INSTALL_DIR=$SNAPCRAFT_STAGE
# plugins
  # Shaders
      - -DPLUGIN_GL_QEDL=ON
      - -DPLUGIN_GL_QSSAO=ON
  # Hidden Points Removal
      - -DPLUGIN_STANDARD_QHPR=ON
  # PCV (AO from point cloud)
      - -DPLUGIN_STANDARD_QPCV=ON
  # Additional IO
      - -DPLUGIN_IO_QADDITIONAL=ON
      - -DPLUGIN_IO_QCORE=ON
  # Poisson recon
  # need to set SNAPCRAFT_BUILD_ENVIRONMENT_MEMORY=4G
      - -DPLUGIN_STANDARD_QPOISSON_RECON=ON
      - -DPOISSON_RECON_WITH_OPEN_MP=ON
  # Animation (screen cast)
      - -DPLUGIN_STANDARD_QANIMATION=ON
      - -DWITH_FFMPEG_SUPPORT=ON
      - -DFFMPEG_INCLUDE_DIR=/usr/include/x86_64-linux-gnu
      - -DFFMPEG_LIBRARY_DIR=/usr/lib/x86_64-linux-gnu
  # Surface Revolution Analysis
      - -DPLUGIN_STANDARD_QSRA=ON
  # Cloth Simulation Filter (from MNS to MNT)
      - -DPLUGIN_STANDARD_QCSF=ON
  # Experimental Photoscan import
      - -DPLUGIN_IO_QPHOTOSCAN=ON
  # Facets (Extracts planar facets from a PC)
      - -DPLUGIN_STANDARD_QFACETS=ON
  # Broom (clean your PCs - the fun way)
      - -DPLUGIN_STANDARD_QBROOM=ON
  # Hough Normals (robust normal computation for unstructured PCs)
      - -DPLUGIN_STANDARD_QHOUGH_NORMALS=ON
      - -DEIGEN_ROOT_DIR=/usr/include/eigen3
  # Compass (Geological toolbox)
      - -DPLUGIN_STANDARD_QCOMPASS=ON
  # M3C2 (Robust C2C Computation)
      - -DPLUGIN_STANDARD_QM3C2=ON
  # Canupo (Classify PCs with SVM)
      - -DPLUGIN_STANDARD_QCANUPO=ON
      - -DDLIB_ROOT=/usr/include
  # PCL (use Point Cloud Library with CC PCs)
      #- -DPLUGIN_STANDARD_QPCL=ON
  eigen:
    plugin: cmake
    source: https://gitlab.com/libeigen/eigen/-/archive/3.3.7/eigen-3.3.7.tar.bz2
    build-packages:
      - build-essential
    configflags:
      - -DCMAKE_BUILD_TYPE=Release
      - -DCMAKE_INSTALL_PREFIX=/usr
  laszip:
    plugin: cmake
    source: https://github.com/LASzip/LASzip.git
    source-tag: "3.4.3"
    build-packages:
      - build-essential
    configflags:
      - -DCMAKE_BUILD_TYPE=Release
      - -DCMAKE_INSTALL_PREFIX=/usr
  pdal:
    after: [laszip, eigen]
    plugin: cmake
    source: https://github.com/PDAL/PDAL.git
    source-tag: "2.0.1"
    build-packages:
      - build-essential
      - libgdal-dev
      - libgeotiff-dev
      - libjsoncpp-dev
    configflags:
      - -DCMAKE_BUILD_TYPE=Release
      - -DCMAKE_INSTALL_PREFIX=/usr
      - -DWITH_TESTS=OFF
      - -DWITH_LASZIP=ON
      - -DBUILD_PLUGIN_PYTHON=OFF
      - -DBUILD_PLUGIN_PGPOINTCLOUD=OFF
  e57:
    plugin: cmake
    source: https://github.com/asmaloney/libE57Format.git
    source-depth: 10
    build-packages:
      - build-essential
    configflags:
     - -DCMAKE_BUILD_TYPE=Release
     - -DCMAKE_INSTALL_PREFIX=/usr